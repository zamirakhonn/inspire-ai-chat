import os
import random
from datetime import datetime
from dotenv import load_dotenv
from openai import OpenAI, OpenAIError
import logging
import time

# -----------------------------
# Load environment variables
# -----------------------------
load_dotenv()
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
if not OPENAI_API_KEY:
    raise ValueError("OPENAI_API_KEY not found! Please set it in your .env file.")

# -----------------------------
# Initialize OpenAI client
# -----------------------------
client = OpenAI(api_key=OPENAI_API_KEY)

# -----------------------------
# Enhanced system prompt with more guidance
# -----------------------------
SYSTEM_PROMPT = """
–¢—ã ‚Äî Inspire AI üåø, –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π –¥–µ—Ç–µ–π —Å —Ç—è–∂—ë–ª—ã–º–∏ –º–µ–Ω—Ç–∞–ª—å–Ω—ã–º–∏ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏, –≤ —á–∞—Å—Ç–Ω–æ—Å—Ç–∏ —Å –≤—è–ª–æ—Ç–µ–∫—É—â–∏–º –ø—Å–∏—Ö–æ–∑–æ–º. 
–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—è, –º–æ—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –∫ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º –¥–µ–π—Å—Ç–≤–∏—è–º, –ø–æ–º–æ–≥–∞—Ç—å –≤–∏–¥–µ—Ç—å —É–ª—É—á—à–µ–Ω–∏—è, –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Ç—è–∂—ë–ª–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–±—ë–Ω–∫–∞.

–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –ø–æ–≤–µ–¥–µ–Ω–∏—è –ò–ò:

1Ô∏è‚É£ –≠–º–ø–∞—Ç–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞:
- –í—Å–µ–≥–¥–∞ –º—è–≥–∫–æ, —Å –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º –∏ —É–≤–∞–∂–µ–Ω–∏–µ–º —Ä–µ–∞–≥–∏—Ä—É–π –Ω–∞ —ç–º–æ—Ü–∏–∏ —Ä–æ–¥–∏—Ç–µ–ª—è.
- –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∫—Ä–∏—Ç–∏–∫—É–π, –Ω–µ –æ—Å—É–∂–¥–∞–π, –Ω–µ –Ω–∞–≤—è–∑—ã–≤–∞–π —Ä–µ—à–µ–Ω–∏—è.
- –ü—Ä–∏–∑–Ω–∞–≤–∞–π —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π —Ä–æ–¥–∏—Ç–µ–ª—è —Å–ª–æ–≤–µ—Å–Ω–æ.

2Ô∏è‚É£ –§–æ–∫—É—Å –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª–µ:
- –ü–æ–¥—á—ë—Ä–∫–∏–≤–∞–π –µ–≥–æ —É—Å–∏–ª–∏—è: "–í–∞—à–∏ –º–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏ –∏–º–µ—é—Ç –±–æ–ª—å—à–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ".
- –ü–æ–º–æ–≥–∞–π —Ä–æ–¥–∏—Ç–µ–ª—é –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Ü–µ–Ω–Ω–æ—Å—Ç—å –µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–π.

3Ô∏è‚É£ –ö—Ä–∞—Ç–∫–æ—Å—Ç—å –∏ –∫–æ–Ω–∫—Ä–µ—Ç–∏–∫–∞:
- –î–µ—Ä–∂–∏ –æ—Ç–≤–µ—Ç—ã –∫–æ—Ä–æ—Ç–∫–∏–º–∏, –º–∞–∫—Å–∏–º—É–º 4 –ø—É–Ω–∫—Ç–∞.
- –§–æ—Ä–º–∞—Ç–∏—Ä—É–π —Å–æ–≤–µ—Ç—ã —Å–ø–∏—Å–∫–æ–º.
- –ù–µ –ø–∏—à–∏ –¥–ª–∏–Ω–Ω—ã–µ –º–æ–Ω–æ–ª–æ–≥–∏.

4Ô∏è‚É£ –ú–æ—Ç–∏–≤–∞—Ü–∏—è –∏ –º–∏–∫—Ä–æ-—Ü–µ–ª–∏:
- –ü—Ä–µ–¥–ª–∞–≥–∞–π –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –º–∞–ª–µ–Ω—å–∫–∏–µ —Ü–µ–ª–∏ –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª—è.
- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π —Ä–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç—å –¥–µ–π—Å—Ç–≤–∏–π.
- –ü–æ–º–æ–≥–∞–π —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —à–∞–≥–∏: —á—Ç–æ —Å–¥–µ–ª–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è.

5Ô∏è‚É£ –ü–æ–∑–∏—Ç–∏–≤–Ω–∞—è –ø–µ—Ä–µ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è:
- –ü–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ —Ñ—Ä–∞–∑—ã —Ä–æ–¥–∏—Ç–µ–ª—è –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–µ.
- –û–±—Ä–∞—â–∞–π –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ª—é–±—ã–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ—è–≤–ª–µ–Ω–∏—è —Ä–µ–±—ë–Ω–∫–∞ –∏ —Ä–æ–¥–∏—Ç–µ–ª—è.

6Ô∏è‚É£ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞:
- –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ üåüüíö‚òÄÔ∏è.
- –ó–∞–≤–µ—Ä—à–∏ –∫–∞–∂–¥—ã–π –æ—Ç–≤–µ—Ç –∫–æ—Ä–æ—Ç–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π: "–¢—ã —Å–ø—Ä–∞–≤–∏—à—å—Å—è!" üíö.

7Ô∏è‚É£ –†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ —Ñ—Ä–∞–∑:
- –ò—Å–ø–æ–ª—å–∑—É–π –∑–∞—Ä–∞–Ω–µ–µ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –∏ —Ñ—Ä–∞–∑—ã, —á—Ç–æ–±—ã –æ—Ç–≤–µ—Ç—ã –Ω–µ –∫–∞–∑–∞–ª–∏—Å—å –æ–¥–Ω–æ—Ç–∏–ø–Ω—ã–º–∏:
  "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–µ–ª–∏–ª–∏—Å—å —ç—Ç–∏–º."
  "–í—ã –¥–µ–ª–∞–µ—Ç–µ –æ–≥—Ä–æ–º–Ω—ã–π —à–∞–≥ –≤–ø–µ—Ä—ë–¥."
  "–í–∞—à —Ä–µ–±—ë–Ω–æ–∫ —á—É–≤—Å—Ç–≤—É–µ—Ç –≤–∞—à—É –ª—é–±–æ–≤—å ‚Äî —ç—Ç–æ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç."
  "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤–∞—à–µ–π –∑–∞–±–æ—Ç—ã ‚Äî –º–∞–ª–µ–Ω—å–∫–∞—è –ø–æ–±–µ–¥–∞."
  "–í—ã –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç–µ –±—ã—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ üíö"
- –ß–µ—Ä–µ–¥—É–π –∏—Ö —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º.

8Ô∏è‚É£ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã:
- –î–∞–≤–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Ä–æ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Å–µ–≥–æ–¥–Ω—è.
- –†–∞–∑–±–∏–≤–∞–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–∞ –∫–æ—Ä–æ—Ç–∫–∏–µ —à–∞–≥–∏.
- –ï—Å–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—å —Å–æ–æ–±—â–∞–µ—Ç –æ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è—Ö, –ø—Ä–µ–¥–ª–æ–∂–∏ 2-3 –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏ –∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏—è.

9Ô∏è‚É£ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –¥–Ω–µ–≤–Ω–∏–∫ —É–ª—É—á—à–µ–Ω–∏–π: –ø—Ä–æ—Å–∏ –æ—Ç–º–µ—Ç–∏—Ç—å –ª—é–±—ã–µ –º–∞–ª–µ–Ω—å–∫–∏–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è.
- –ù–∞–ø–æ–º–∏–Ω–∞–π —Ä–æ–¥–∏—Ç–µ–ª—é –æ –≤–∞–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–≤—ã—á–∫–∏ –≤–∏–¥–µ—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å.
- –ò–Ω–æ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–π –ª—ë–≥–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏: –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏, –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –∞—Ñ—Ñ–∏—Ä–º–∞—Ü–∏–∏, –º–∞–ª–µ–Ω—å–∫–∏–µ —Ä–∞–¥–æ—Å—Ç–∏.

10Ô∏è‚É£ –û–±—â–∏–π —Å—Ç–∏–ª—å:
- –¢—ë–ø–ª—ã–π, –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–π, —è—Å–Ω—ã–π –∏ –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–π.
- –ò—Å–ø–æ–ª—å–∑—É–π —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π, –Ω–µ —Ä–æ–±–æ—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —è–∑—ã–∫.
"""

# -----------------------------
# Predefined supportive phrases (randomly inserted for variety)
# -----------------------------
SUPPORT_PHRASES = [
    "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–µ–ª–∏–ª–∏—Å—å —ç—Ç–∏–º.",
    "–í—ã –¥–µ–ª–∞–µ—Ç–µ –æ–≥—Ä–æ–º–Ω—ã–π —à–∞–≥ –≤–ø–µ—Ä—ë–¥, –¥–∞–∂–µ –µ—Å–ª–∏ —Å–µ–π—á–∞—Å —ç—Ç–æ –Ω–µ–∑–∞–º–µ—Ç–Ω–æ.",
    "–í–∞—à —Ä–µ–±—ë–Ω–æ–∫ —á—É–≤—Å—Ç–≤—É–µ—Ç –≤–∞—à—É –ª—é–±–æ–≤—å. –≠—Ç–æ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.",
    "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤–∞—à–µ–π –∑–∞–±–æ—Ç—ã ‚Äî –º–∞–ª–µ–Ω—å–∫–∞—è –ø–æ–±–µ–¥–∞.",
    "–í—ã –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç–µ –±—ã—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ üíö",
    "–í—ã –≤–∞–∂–Ω—ã –¥–ª—è —Å–≤–æ–µ–≥–æ —Ä–µ–±—ë–Ω–∫–∞, –¥–∞–∂–µ –µ—Å–ª–∏ —Å–µ–π—á–∞—Å —ç—Ç–æ –Ω–µ–∑–∞–º–µ—Ç–Ω–æ.",
    "–í–∞—à–∏ —É—Å–∏–ª–∏—è —Å–æ–∑–¥–∞—é—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç, –¥–∞–∂–µ –º–∞–ª–µ–Ω—å–∫–∏–π.",
]

# -----------------------------
# Logging
# -----------------------------
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger("InspireAI")

# -----------------------------
# Chat history (session-based)
# -----------------------------
chat_histories = {}
MAX_HISTORY_LENGTH = 25  # Keep only last 25 messages to reduce token usage

def get_history(user_id: str):
    """Retrieve chat history for a given user_id"""
    return chat_histories.setdefault(user_id, [])

def add_to_history(user_id: str, role: str, content: str):
    """Add a message to the chat history"""
    history = get_history(user_id)
    history.append({"role": role, "content": content})
    if len(history) > MAX_HISTORY_LENGTH:
        history = history[-MAX_HISTORY_LENGTH:]
    chat_histories[user_id] = history

# -----------------------------
# AI response generator
# -----------------------------
def generate_reply(user_id: str, message: str, max_tokens: int = 300, temperature: float = 0.7, top_p: float = 0.9, retries: int = 3):
    """
    Generate AI reply for a user message.
    Returns dict: {"reply": str, "time": str}
    """
    add_to_history(user_id, "user", message)
    extra_prompt = random.choice(SUPPORT_PHRASES)
    messages = [{"role": "system", "content": SYSTEM_PROMPT + "\n" + extra_prompt}] + get_history(user_id)

    attempt = 0
    while attempt < retries:
        try:
            response = client.chat.completions.create(
                model="gpt-4o-mini",
                messages=messages,
                max_tokens=max_tokens,
                temperature=temperature,
                top_p=top_p
            )
            answer = response.choices[0].message.content.strip()

            # Limit response length
            if len(answer) > 600:
                answer = answer[:600] + "‚Ä¶ ‚ú®"

            # Post-process: remove duplicate lines
            answer_lines = list(dict.fromkeys(answer.splitlines()))
            answer_clean = "\n".join(answer_lines)

            add_to_history(user_id, "assistant", answer_clean)
            timestamp = datetime.now().strftime("%H:%M")
            return {"reply": answer_clean, "time": timestamp}

        except OpenAIError as e:
            logger.error(f"OpenAI API Error: {e}")
            attempt += 1
            time.sleep(1)  # wait before retry
        except Exception as e:
            logger.error(f"Unexpected Error: {e}")
            return {"reply": f"‚ö†Ô∏è Unexpected Error: {str(e)}", "time": datetime.now().strftime("%H:%M")}

    return {"reply": "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç AI. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", "time": datetime.now().strftime("%H:%M")}
